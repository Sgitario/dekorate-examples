name: "Pull Request Build"
on:
  workflow_dispatch:
  pull_request:
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - id: set-matrix
        run: echo "::set-output name=matrix::{\"example\":[\"spring-boot-rest\"]}"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  linux-build-dekorate-snapshot:
    name: PR - Linux - JVM - Build Dekorate Snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          repository: dekorateio/dekorate
      - name: Setup Java
        uses: actions/setup-java@v2.3.1
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash
      - name: Cache .m2 registry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build
        run: mvn clean install -DskipTests
      - id: set-dekorate-version
        run: |
          DEKORATE_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "::set-output name=dekorate-version::$DEKORATE_VERSION"
    outputs:
      dekorate-version: ${{ steps.set-dekorate-version.outputs.dekorate-version }}
  linux-build-local:
    name: PR - Linux - JVM - All Examples - Local
    needs: linux-build-dekorate-snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Java
        uses: actions/setup-java@v2.3.1
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash
      - name: Cache .m2 registry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build
        run: ./mvnw -s .github/mvn-settings.xml clean install -Ddekorate.version=${{needs.linux-build-dekorate-snapshot.outputs.dekorate-version}}
  linux-build-ocp:
    name: PR - Linux - JVM - OpenShift - Example - ${{ matrix.example }}
    needs: [ setup, linux-build-dekorate-snapshot, linux-build-local ]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.setup.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Java
        uses: actions/setup-java@v2.3.1
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash
      - name: Cache .m2 registry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Setup OpenShift
        uses: manusa/actions-setup-openshift@v1.1.3
        with:
          oc version: v3.11.0
          dns ip: 1.1.1.1
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Project using Dekorate
        run: |
          oc new-project dekorate
          ./mvnw -s .github/mvn-settings.xml -pl ${{ matrix.example }} clean verify -Popenshift,openshift-it -Ddekorate.version=${{needs.linux-build-dekorate-snapshot.outputs.dekorate-version}}
          oc delete project dekorate
  linux-build-kubernetes:
    name: PR - Linux - JVM - Kubernetes - Example - ${{ matrix.example }}
    needs: [ setup, linux-build-dekorate-snapshot, linux-build-local ]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.setup.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Java
        uses: actions/setup-java@v2.3.1
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash
      - name: Cache .m2 registry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Kubernetes KinD Cluster
        uses: container-tools/kind-action@v1
        with:
          version: v0.11.1
          registry: true
      - name: Build Project using Dekorate
        run: |
          K8S_NAMESPACE=dekorate
          kubectl create namespace $K8S_NAMESPACE
          ./mvnw -pl ${{ matrix.example }} -s .github/mvn-settings.xml clean verify -Pkubernetes,kubernetes-it -Ddekorate.docker.registry=$KIND_REGISTRY -Dkubernetes.namespace=$K8S_NAMESPACE -Ddekorate.push=true
          kubectl delete namespace $K8S_NAMESPACE